# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: BlueLabel Linux ARM

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: pguyot/arm-runner-action@v2
        with:
          commands: |
            wget https://dot.net/v1/dotnet-install.sh -O dotnet-install.sh
            chmod +x ./dotnet-install.sh
            ./dotnet-install.sh --version latest
            dotnet workload restore
            dotnet restore ./src/BlueLabel.Linux/BlueLabel.Linux.csproj
            dotnet build --no-restore ./src/BlueLabel.Linux/BlueLabel.Linux.csproj
            dotnet publish -c Release -r linux-arm64 -o ./publish/linux-arm64/ ./src/BlueLabel.Linux/BlueLabel.Linux.csproj
            dotnet publish -c Release -r linux-musl-arm64 -o ./publish/linux-musl-arm64/ ./src/BlueLabel.Linux/BlueLabel.Linux.csproj
      - name: Upload Artifact (Linux ARM64)
        uses: actions/upload-artifact@v3
        with:
          name: BlueLabel Linux ARM64
          path: |
            ./publish/linux-arm64/
            !*.dbg
            !*.pdb
      - name: Upload Artifact (Linux MUSL ARM64)
        uses: actions/upload-artifact@v3
        with:
          name: BlueLabel Linux MUSL ARM64
          path: |
            ./publish/linux-arm64/
            !*.dbg
            !*.pdb